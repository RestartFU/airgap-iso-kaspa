import { ProtocolSerializerExtension, ProtocolSerializerModule } from '../module/extensions/serialization/ProtocolSerializer';
import { Module } from '../module/module';
import { ModuleNetworkRegistry } from '../module/module-network-registry';
import { ProtocolConfiguration } from '../types/module';
import { ProtocolNetwork } from '../types/protocol';
import { Schema } from './interface';
export declare function createSupportedProtocols<P extends string = string>(online: Record<P, ModuleNetworkRegistry> | Record<P, Record<string, ProtocolNetwork>>, offline?: P[]): Record<P, ProtocolConfiguration>;
export declare const protocolSerializerSchema: Schema<ProtocolSerializerModule>;
export declare function canSerializeProtocols<T extends Module>(module: T): module is T & ProtocolSerializerExtension<T>;
