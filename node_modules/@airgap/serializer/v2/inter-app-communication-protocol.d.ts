import { IACMessageDefinitionObject } from './message';
import { Payload } from './payloads/payload';
import { IACPayloadType, Serializer } from './serializer';
export declare type IACProtocolVersion = number;
export declare type IACProtocolType = [IACProtocolVersion, IACPayloadType, Payload];
export declare class IACProtocol {
    readonly version: number;
    readonly payloadType: IACPayloadType;
    payload: Payload;
    constructor(data: Payload);
    decoded(): IACProtocolType;
    encoded(serializer?: Serializer): string;
    static fromDecoded(data: IACMessageDefinitionObject[], singleChunkSize?: number, multiChunkSize?: number, serializer?: Serializer): IACProtocol[];
    static fromEncoded(data: string[], serializer?: Serializer): IACProtocol[];
}
