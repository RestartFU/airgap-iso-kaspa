interface CacheConfig<T> {
    cacheValue: boolean;
    validate?: (value: T) => boolean;
}
export declare class Cache {
    expirationTime: number;
    constructor(expirationTime: number);
    private readonly cachedValues;
    private readonly promises;
    get<T>(key: string): Promise<T>;
    save<T>(key: string, promise: Promise<T>, config?: CacheConfig<T>): Promise<T>;
    delete(key: string): void;
    private isValidOrDelete;
}
export {};
