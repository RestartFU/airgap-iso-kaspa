"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Action = exports.ActionState = void 0;
var errors_1 = require("../errors");
var coinlib_error_1 = require("../errors/coinlib-error");
var StateMachine_1 = require("./StateMachine");
var ActionState;
(function (ActionState) {
    ActionState[ActionState["READY"] = 0] = "READY";
    ActionState[ActionState["EXECUTING"] = 1] = "EXECUTING";
    ActionState[ActionState["COMPLETED"] = 2] = "COMPLETED";
    ActionState[ActionState["CANCELLED"] = 3] = "CANCELLED";
})(ActionState = exports.ActionState || (exports.ActionState = {}));
var Action = /** @class */ (function () {
    function Action(context) {
        this.stateMachine = new StateMachine_1.StateMachine(ActionState.READY, new Map([
            [ActionState.READY, []],
            [ActionState.EXECUTING, [ActionState.READY]],
            [ActionState.COMPLETED, [ActionState.EXECUTING]],
            [ActionState.CANCELLED, [ActionState.READY, ActionState.EXECUTING]]
        ]));
        this.context = context;
    }
    Object.defineProperty(Action.prototype, "identifier", {
        get: function () {
            return 'action';
        },
        enumerable: false,
        configurable: true
    });
    Action.prototype.getState = function () {
        return this.stateMachine.getState();
    };
    Action.prototype.start = function () {
        return __awaiter(this, void 0, void 0, function () {
            var result, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        this.stateMachine.transitionTo(ActionState.EXECUTING);
                        return [4 /*yield*/, this.perform()];
                    case 1:
                        result = _a.sent();
                        this.handleSuccess(result);
                        return [3 /*break*/, 3];
                    case 2:
                        error_1 = _a.sent();
                        this.handleError(error_1);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Action.prototype.cancel = function () {
        this.stateMachine.transitionTo(ActionState.CANCELLED);
        if (this.onCancel) {
            this.onCancel();
        }
    };
    Action.prototype.addValidTransition = function (from, to) {
        this.stateMachine.addValidStateTransition(from, to);
    };
    Action.prototype.handleSuccess = function (result) {
        this.result = result;
        this.stateMachine.transitionTo(ActionState.COMPLETED);
        if (this.onComplete) {
            this.onComplete(result);
        }
    };
    Action.prototype.handleError = function (error) {
        this.error = error;
        this.stateMachine.transitionTo(ActionState.COMPLETED);
        if (this.onError) {
            this.onError(error);
        }
        throw new errors_1.InvalidValueError(coinlib_error_1.Domain.ACTIONS, error.message);
    };
    return Action;
}());
exports.Action = Action;
//# sourceMappingURL=Action.js.map